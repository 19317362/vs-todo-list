<UserControl x:Class="VSToDoList.UI.MainWindow.ToDoListWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:models="clr-namespace:VSToDoList.Models"
             xmlns:view="clr-namespace:VSToDoList.UI.MainWindow"
             xmlns:controls="clr-namespace:VSToDoList.Controls;assembly=VSToDoList.Controls"
             xmlns:converters="clr-namespace:VSToDoList.BL.Services.Converters"
             xmlns:vsp="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.14.0"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             Background="{DynamicResource VsBrush.Window}"
             Foreground="{DynamicResource VsBrush.WindowText}"
             Name="thisWindow"
             DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <UserControl.Resources>
        <view:ToDoListWindowViewModel x:Key="ViewModel" />
        <converters:ControlSizeConverter x:Key="SizeConverter" />
        <!--<Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}" x:Key="TreeViewItemFullWidthStyle">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="100*" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                -->
        <!--
                             Note that the following do not work, but I believe the top 2 should?!-->
        <!--
                                <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press" Name="Expander">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="UIElement.Focusable" Value="false" />
                                            <Setter Property="FrameworkElement.Width" Value="16" />
                                            <Setter Property="FrameworkElement.Height" Value="16" />
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                                                            <Path Fill="#00FFFFFF"  Stroke="#FF989898"  Name="ExpandPath">
                                                                <Path.Data>
                                                                    <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                </Path.Data>
                                                                <Path.RenderTransform>
                                                                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                <Setter TargetName="ExpandPath"  Property="Shape.Stroke" Value="#FF1BBBFA" />
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF" />
                                                            </Trigger>
                                                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                    <Setter.Value>
                                                                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter TargetName="ExpandPath"  Property="Shape.Fill" Value="#FF595959" />
                                                                <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border x:Name="Bd"
                                        HorizontalAlignment="Stretch"
                                        BorderThickness="{TemplateBinding Border.BorderThickness}"
                                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                                        Padding="{TemplateBinding Control.Padding}"
                                        Background="{TemplateBinding Panel.Background}"
                                        SnapsToDevicePixels="True"
                                        Grid.Column="1">
                                    <ContentPresenter x:Name="PART_Header"
                                                Content="{TemplateBinding HeaderedContentControl.Header}"
                                                ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                                ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                                ContentSource="Header"
                                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.Column="1"  Grid.Row="1" />
                            </Grid>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TreeViewItem.IsExpanded"
                   Value="False">
                                <Setter TargetName="ItemsHost"
                    Property="UIElement.Visibility"
                    Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="ItemsControl.HasItems"
                   Value="False">
                                <Setter TargetName="Expander"
                    Property="UIElement.Visibility"
                    Value="Hidden" />
                            </Trigger>
                            <Trigger Property="TreeViewItem.IsSelected"
                   Value="True">
                                <Setter TargetName="Bd"
                    Property="Panel.Background"
                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="TextElement.Foreground"
                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TreeViewItem.IsSelected"
                         Value="True" />
                                    <Condition Property="Selector.IsSelectionActive"
                         Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd"
                    Property="Panel.Background"
                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter Property="TextElement.Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled"
                   Value="False">
                                <Setter Property="TextElement.Foreground"
                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
    </UserControl.Resources>

    <Grid DataContext="{StaticResource ViewModel}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" MouseUp="OnGridMouseUp">
        <TreeView x:Name="TasksTreeView" Background="{DynamicResource VsBrush.Window}"
                  ItemsSource="{Binding Path=TasksList,Mode=TwoWay}" HorizontalAlignment="Stretch"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  PreviewMouseDoubleClick="TreeView_OnPreviewMouseDoubleClick">
            <TreeView.Resources>

                <!-- The Visual Studio color used in the Solution Explorer-->
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                                 Color="{DynamicResource {x:Static vsp:TreeViewColors.SelectedItemInactiveColorKey}}" />

                <!-- The Visual Studio color for the Tool Windows Text-->
                <SolidColorBrush x:Key="ToolWindowText" Color="{DynamicResource VsBrush.ToolWindowText}" />
            </TreeView.Resources>

            <!---->
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type models:Task}" ItemsSource="{Binding Path=SubTasks,Mode=TwoWay}">
                    <Grid Margin="1,0,1,0"
                        Width="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},Path=ActualWidth,Converter={StaticResource SizeConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <CheckBox IsChecked="{Binding IsDone,Mode=TwoWay}" Grid.Column="0" VerticalAlignment="Center" />
                        <controls:EditBox x:Name="taskBox" Value="{Binding Name}" Foreground="{DynamicResource VsBrush.ToolWindowText}"  Grid.Column="1" VerticalAlignment="Center" Margin="1,0,0,2" />
                        <Button HorizontalAlignment="Right" Grid.Column="2" Background="Transparent" Click="OnTreeViewItemAddTaskButtonClicked"
                                            BorderBrush="Transparent" ToolTip="Add new task">
                            <Image Source="/VsToDoList;component/Resources/plus.png" Width="16" Height="16" />
                        </Button>
                        <Button HorizontalAlignment="Right" Grid.Column="3" Background="Transparent" Margin="3,0,0,0" Click="OnRemoveItemClicked"
                                            BorderBrush="Transparent" ToolTip="Delete task and its children">
                            <Image Source="/VsToDoList;component/Resources/minus.png" Width="16" Height="16" />
                        </Button>
                    </Grid>
                    <!--<HierarchicalDataTemplate.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:Task}">
                            <Grid Width="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},Path=ActualWidth,Converter={StaticResource SizeConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <CheckBox IsChecked="{Binding IsDone,Mode=TwoWay}" Grid.Column="0" VerticalAlignment="Center" />
                                <controls:EditBox Value="{Binding Name}" Foreground="{DynamicResource VsBrush.ToolWindowText}" Grid.Column="1" VerticalAlignment="Center" Margin="1,0,0,2" />
                                <Button HorizontalAlignment="Right" Grid.Column="2" Background="Transparent" Click="OnTreeViewItemAddTaskButtonClicked"
                                                        BorderBrush="Transparent" ToolTip="Add new task">
                                    <Image Source="/VsToDoList;component/Resources/plus.png" Width="16" Height="16" />
                                </Button>
                                <Button HorizontalAlignment="Right" Grid.Column="3" Background="Transparent" Margin="3,0,0,0" Click="OnRemoveItemClicked"
                                                        BorderBrush="Transparent" ToolTip="Delete task and its children">
                                    <Image Source="/VsToDoList;component/Resources/minus.png" Width="16" Height="16" />
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>-->
            </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </Grid>
</UserControl>